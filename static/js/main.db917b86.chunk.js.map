{"version":3,"sources":["components/nav.js","components/hero.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["styled","h1","nav","Box","align","justify","direction","pad","gap","wrap","height","margin","left","Heading","textAlign","level","Nav","flex","Button","label","active","reverse","primary","plain","hoverIndicator","overflow","Image","src","top","bottom","right","Text","size","App","Grommet","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"icAImBA,QAAOC,GAAV,KA8CDC,MAvCf,WACE,OACE,kBAACC,EAAA,EAAD,CACEC,MAAM,SACNC,QAAQ,QACRC,UAAU,MACVC,IAAI,QACJC,IAAI,QACJC,MAAM,EACNC,OAAO,SACPC,OAAQ,CAAEC,KAAM,WAEhB,kBAACC,EAAA,EAAD,CAASC,UAAU,QAAQC,MAAM,KAAjC,mBAGA,kBAACC,EAAA,EAAD,CACEZ,MAAM,QACNa,MAAM,EACNT,IAAI,SACJF,UAAU,MACVD,QAAQ,MACRE,IAAI,UAEJ,kBAACW,EAAA,EAAD,CACEC,MAAM,SACNC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,OAAO,EACPC,gBAAgB,IAElB,kBAACN,EAAA,EAAD,CAAQC,MAAM,QAAQI,OAAO,EAAMC,gBAAgB,IACnD,kBAACN,EAAA,EAAD,CAAQC,MAAM,YAAYI,OAAO,EAAMC,gBAAgB,IACvD,kBAACN,EAAA,EAAD,CAAQC,MAAM,UAAUI,OAAO,EAAMC,gBAAgB,O,QC1B9CtB,MAdf,WACE,OACE,kBAACC,EAAA,EAAD,CACEC,MAAM,SACNC,QAAQ,QACRoB,SAAS,SACTnB,UAAU,SACVI,OAAO,SAEP,kBAACgB,EAAA,EAAD,CAAOC,IAAI,iG,QCyBFzB,MAlCf,WACE,OACE,kBAACC,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,SACRE,IAAK,CAAEqB,IAAK,SAAUC,OAAQ,QAASjB,KAAM,MAAOkB,MAAO,QAE3D,kBAACjB,EAAA,EAAD,cACA,kBAACkB,EAAA,EAAD,CAAMC,KAAK,UAAX,w4CCMSC,MAZf,WACE,OACE,kBAACC,EAAA,EAAD,CAASX,OAAK,GACZ,yBAAKY,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCAYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.db917b86.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Nav, Button, Heading } from \"grommet\";\nimport styled from \"styled-components\";\n\nconst styledText = styled.h1`\n  font-family: p22-underground, sans-serif;\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 100;\n`;\n\nfunction nav() {\n  return (\n    <Box\n      align=\"center\"\n      justify=\"start\"\n      direction=\"row\"\n      pad=\"small\"\n      gap=\"large\"\n      wrap={false}\n      height=\"xsmall\"\n      margin={{ left: \"xsmall\" }}\n    >\n      <Heading textAlign=\"start\" level=\"2\">\n        Women in Gaming\n      </Heading>\n      <Nav\n        align=\"start\"\n        flex={false}\n        gap=\"medium\"\n        direction=\"row\"\n        justify=\"end\"\n        pad=\"xsmall\"\n      >\n        <Button\n          label=\"Events\"\n          active={true}\n          reverse={false}\n          primary={false}\n          plain={true}\n          hoverIndicator={true}\n        />\n        <Button label=\"Staff\" plain={true} hoverIndicator={true} />\n        <Button label=\"Resources\" plain={true} hoverIndicator={true} />\n        <Button label=\"Contact\" plain={true} hoverIndicator={true} />\n      </Nav>\n    </Box>\n  );\n}\n\nexport default nav;\n","import React from \"react\";\nimport { Box, Image } from \"grommet\";\nimport styled from \"styled-components\";\n\nfunction nav() {\n  return (\n    <Box\n      align=\"center\"\n      justify=\"start\"\n      overflow=\"hidden\"\n      direction=\"column\"\n      height=\"large\"\n    >\n      <Image src=\"https://progameguides.com/wp-content/uploads/2020/01/new-horizons-desktop-wallpaper008.jpg\" />\n    </Box>\n  );\n}\n\nexport default nav;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\nimport styled from \"styled-components\";\n\nfunction nav() {\n  return (\n    <Box\n      align=\"start\"\n      justify=\"center\"\n      pad={{ top: \"xlarge\", bottom: \"large\", left: \"20%\", right: \"20%\" }}\n    >\n      <Heading>About</Heading>\n      <Text size=\"medium\">\n        Lorem ipsum dolor sit amet, ex quem volutpat vituperatoribus has,\n        voluptua argumentum quo ad, nam illum iudico in. Ad his quando mucius,\n        cu nec alii gubergren, in sed oblique apeirian definitiones. Senserit\n        argumentum eu eum, id sed utroque mediocrem petentium. Eu pro ponderum\n        adversarium, graeci virtute albucius te vel, vim at reque referrentur.\n        Te solet labore interpretaris pro, mei no nullam regione. Ne quot simul\n        sententiae cum. Quis etiam accusata at per. Vix ad tota tation dolore,\n        amet error no eos, in sed primis eruditi invidunt. In sumo nominavi\n        temporibus vis. Tale postea his in, mei menandri adipisci percipitur ad,\n        id pri omnesque volutpat. Ex facete urbanitas conceptam est, cu vim amet\n        albucius. Ea vim dicat labores perfecto, est sensibus oportere ad. Est\n        in purto malorum, id falli feugiat nostrum has. Affert fuisset delicata\n        ex nam. Legere nominati gloriatur mea id, id vel solet dissentiunt\n        interpretaris. Reque argumentum no usu, docendi dissentiet ut usu. Erat\n        prompta ad sit, et nam suas sententiae. Mundi prodesset in pri, mei\n        partiendo moderatius referrentur eu. Solum augue mea te, ius ad decore\n        consetetur. Ut legere meliore suscipit quo. Sea ne evertitur aliquando,\n        ex purto soluta sea, ex saperet corrumpit has. Ei quo enim vero, et mel\n        nonumes imperdiet moderatius, te vidit deseruisse omittantur vis. Usu ne\n        meis primis discere, ex regione quaestio cum. Id elitr ridens ius.\n      </Text>\n    </Box>\n  );\n}\n\nexport default nav;\n","import React from \"react\";\nimport { Grommet } from \"grommet\";\nimport Nav from \"./components/nav\";\nimport Hero from \"./components/hero\";\nimport About from \"./components/about\";\n\nfunction App() {\n  return (\n    <Grommet plain>\n      <div className=\"App\">\n        <Nav />\n        <Hero />\n        <About />\n      </div>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}